name: Android CI/CD (master)

on:
  push:
    branches: [ "master" ]

jobs:
  master-ci-cd:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_PROD_BASE64 }}
        run: |
          echo "Decoding google-services.json..."
          mkdir -p app/src/release
          echo $GOOGLE_SERVICES_JSON_BASE64 | base64 --decode > app/src/release/google-services.json
          echo "google-services.json created successfully."

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Create local.properties
        run: |
          echo "COGNITO_USER_POOL_ID=${{ secrets.COGNITO_USER_POOL_ID }}" >> local.properties
          echo "COGNITO_APP_CLIENT_ID=${{ secrets.COGNITO_APP_CLIENT_ID }}" >> local.properties
          echo "COGNITO_REGION=${{ secrets.COGNITO_REGION }}" >> local.properties
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Clean project
        run: ./gradlew clean

      - name: Run Android Lint
        run: ./gradlew lintRelease

      - name: Decode Release Signing Key
        id: decode_key
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'release.jks'
          encodedString: ${{ secrets.RELEASE_SIGNING_KEY_BASE64 }}

      - name: Run Unit Tests (Release)
        run: ./gradlew testReleaseUnitTest

      - name: Run Android Instrumentation Tests (Release)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedAndroidTest -PtargetTestBuildType=release

      - name: Build Release App Bundle (AAB)
        run: ./gradlew bundleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          SIGNING_KEY_FILE: ${{ steps.decode_key.outputs.filePath }}

      - name: Upload Release AAB to Google Play (Internal Testing)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.project200.undabang
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed